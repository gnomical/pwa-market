{"version":3,"sources":["webpack:///./components/app-stub/index.js","webpack:///./routes/app-library/index.js","webpack:///./components/app-stub/style.scss","webpack:///./routes/app-library/style.scss"],"names":["AppStub","props","stub","updateStub","useState","initialState","useEffect","url","getManifest","then","manifest","prevStub","title","name","length","short_name","iconURL","icons","src","match","saved","class","style","appStub","btn","onClick","e","updateInstalledApps","icon","slogan","description","AppLibrary","apps","updateApps","fetch","resp","json","data","appLibrary","map","app","installedApps","includes","btoa","module","exports"],"mappings":"22BAwEeA,MAlEEC,IAEf,MAAOC,EAAMC,GAAcC,YAASH,EAAMI,cAE1CC,YAAU,KACLJ,EAAKK,KACNC,YAAYN,EAAKK,KAChBE,KAAKC,IACJP,EAAWQ,GAAY,EAAJ,KACdD,GADc,IAEjBH,IAAKI,EAASJ,IACdK,MAAQF,EAASG,KAAKC,OAAOJ,EAASG,KAAKH,EAASK,WACpDC,QAAUN,EAASO,MAAM,GAAIN,EAASJ,KAAKG,EAASO,MAAM,GAAGC,IAAIC,MAAM,OAAO,GAAG,KAAKT,EAASO,MAAM,GAAGC,IAAKP,EAASK,QACtHI,MAAOT,EAASS,YAIrB,CAAClB,EAAKK,MAqCV,OACG,mBAAKc,MAAOC,IAAMC,SAChB,mBAAKF,MAAOC,IAAME,KAAKtB,EAAKkB,MAAM,IAAIE,IAAMF,MAAM,IAAKK,QAhBjCC,KACxBvB,EAAWQ,IAIPV,EAAM0B,oBAHJhB,EAASS,MAGe,SAFA,OAEUlB,GAEtC,OACKS,GADL,IAEES,OAAQT,EAASS,YAOgElB,EAAKkB,MAAM,OAAO,QACrG,mBAAKC,MAAOC,IAAMM,MACf1B,EAAKc,SAAW,mBAAKE,IAAKhB,EAAKc,WAElC,mBAAKK,MAAOC,IAAMV,OAAQV,EAAKU,OAC/B,mBAAKS,MAAOC,IAAMO,QAAS3B,EAAK4B,YAAY5B,EAAK4B,YAAY,MCpCpDC,UAxBK9B,IAElB,MAAO+B,EAAMC,GAAc7B,YAAS,IAWrC,OATCE,YAAU,KACR4B,MAAM,mFACLzB,KAAK0B,IACJA,EAAKC,OAAO3B,KAAK4B,IACfJ,EAAWI,EAAKL,WAGnB,IAGH,mBAAKX,MAAOC,IAAMgB,YACjB,qCACIN,EAAKlB,QAAUkB,EAAKO,IAAIC,IACvBA,EAAIpB,MAAQnB,EAAMwC,cAAcC,SAASC,KAAKH,EAAIjC,MAC3C,YAAC,EAAD,CAASoB,oBAAqB1B,EAAM0B,oBAAqBtB,aAAcmC,S,iBCxBtFI,EAAOC,QAAU,CAAC,QAAU,QAAQ,IAAM,QAAQ,MAAQ,QAAQ,OAAS,QAAQ,KAAO,S,iBCA1FD,EAAOC,QAAU,CAAC,WAAa","file":"route-app-library.chunk.687ba.esm.js","sourcesContent":["import { h } from 'preact'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getManifest } from '../../util/dbHelpers'\nimport style from './style'\nimport { useEffect, useState } from 'preact/hooks'\n\nconst AppStub = (props) => {\n\n  const [stub, updateStub] = useState(props.initialState)\n\n  useEffect(() => {\n    if(stub.url) {\n      getManifest(stub.url)\n      .then(manifest => {\n        updateStub(prevStub => ({\n          ...manifest,\n          url: prevStub.url,\n          title: (manifest.name.length?manifest.name:manifest.short_name),\n          iconURL: (manifest.icons[0]?(prevStub.url+(manifest.icons[0].src.match(/^\\//)?'':'/')+manifest.icons[0].src):prevStub.iconURL),\n          saved: prevStub.saved,\n        }))\n      })\n    }\n  }, [stub.url])\n\n  // const previewWallpaper = (e) => {\n  //   e.stopPropagation()\n\t// \tvar file = e.target.files;\n\t// \tif (file.length > 0) {\n\t// \t\tvar fileReader = new FileReader()\n\t// \t\tfileReader.onload = (event) => {\n  //       props.saveWallpaper(event.target.result)\n  //         .then(() => alert('Wallpaper Updated'))\n  //         .catch(err => console.log(err))\n\t// \t\t}\n\t// \t\tfileReader.readAsDataURL(file[0])\n  //   } \n  // }\n\n  // const clearWallpaper = (e) => {\n  //   e.stopPropagation()\n  //   props.saveWallpaper(undefined)\n  //     .then(() => alert('Wallpaper Removed'))\n  //     .catch(err => console.log(err))\n  // }\n\n  const togglePossession = (e) => {\n    updateStub(prevStub => {\n      if(!prevStub.saved) {\n        props.updateInstalledApps('save', stub)\n      } else {\n        props.updateInstalledApps('remove', stub)\n      }\n      return {\n        ...prevStub,\n        saved: !prevStub.saved,\n      }\n    })\n  }\n\n\treturn (\n    <div class={style.appStub}>\n      <div class={style.btn+(stub.saved?' '+style.saved:'')} onClick={togglePossession}>{stub.saved?'lose':'save'}</div>\n      <div class={style.icon}>\n        {stub.iconURL && <img src={stub.iconURL}/>}\n      </div>\n      <div class={style.title}>{stub.title}</div>\n      <div class={style.slogan}>{stub.description?stub.description:''}</div>\n    </div>\n\t)\n}\n\nexport default AppStub;","import { h } from 'preact'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getManifest } from '../../util/dbHelpers'\nimport style from './style'\nimport { useEffect, useState } from 'preact/hooks'\nimport AppStub from '../../components/app-stub'\n\nconst AppLibrary = (props) => {\n\n  const [apps, updateApps] = useState([])\n\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/openhomescreen/pwa-market/main/data/apps.json')\n    .then(resp => {\n      resp.json().then(data => {\n        updateApps(data.apps)\n      })\n    })\n  }, [])\n\n\treturn (\n\t\t<div class={style.appLibrary}>\n\t\t\t<h1>App Library</h1>\n      {apps.length && apps.map(app => {\n        app.saved = props.installedApps.includes(btoa(app.url))\n        return <AppStub updateInstalledApps={props.updateInstalledApps} initialState={app}/>\n      })}\n\t\t</div>\n\t)\n}\n\nexport default AppLibrary;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appStub\":\"_1e59\",\"btn\":\"_0d0c\",\"saved\":\"_88cc\",\"slogan\":\"_52ef\",\"icon\":\"a01a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLibrary\":\"_00a4\"};"],"sourceRoot":""}